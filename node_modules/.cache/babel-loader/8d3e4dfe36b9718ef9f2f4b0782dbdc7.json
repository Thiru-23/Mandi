{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uriht\\\\OneDrive\\\\Desktop\\\\DigitalMandi-main\\\\src\\\\Components\\\\Crops.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport noteContext from \"../Context/Crops/CropContext\";\n/* import Addnote from \"./AddCrops\"; */\n\nimport Noteitem from \"./CropDetails\";\nimport AfterBidCard from \"./AfterBidCard\";\n/* import { FDashboard } from \"./Dashboard/FDashboard\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const context = useContext(noteContext);\n  const {\n    crops,\n    getCrops,\n    forbidcrops,\n    getforbidCrops\n  } = context; // useEffect(() => {\n  //   getCrops();\n  //   //eslint-disable-next-line\n  // }, []);\n\n  const handleforbidClick = e => {\n    e.preventDefault();\n    getforbidCrops();\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    getCrops();\n  };\n\n  const updateNote = currentNote => {}; //const crop=crops[0];\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-5 text-white\",\n          children: \"List of All Crops Available for bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container row mx-2\",\n          children: [console.log(localStorage.getItem('role')), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg btn-success btn-login fw-bold text-uppercase mb-5\",\n            type: \"submit\",\n            onClick: handleforbidClick,\n            children: \"Get list of your crops Available for bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: forbidcrops.map(crop => {\n              return /*#__PURE__*/_jsxDEV(Noteitem, {\n                crop: crop,\n                updateNote: updateNote\n              }, crop._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this), console.log(crops), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-5 text-white\",\n            children: \"List of bids for your Crops \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg btn-success btn-login fw-bold text-uppercase mb-5\",\n            type: \"submit\",\n            onClick: handleClick,\n            children: \"Get details of current bid for your crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: crops.map(crop => {\n              return /*#__PURE__*/_jsxDEV(AfterBidCard, {\n                crop: crop\n              }, crop._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Notes, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/uriht/OneDrive/Desktop/DigitalMandi-main/src/Components/Crops.js"],"names":["React","useContext","noteContext","Noteitem","AfterBidCard","Notes","context","crops","getCrops","forbidcrops","getforbidCrops","handleforbidClick","e","preventDefault","handleClick","updateNote","currentNote","console","log","localStorage","getItem","map","crop","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA;;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA;;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAGL,UAAU,CAACC,WAAD,CAA1B;AACA,QAAM;AAACK,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA,WAAhB;AAA4BC,IAAAA;AAA5B,MAA4CJ,OAAlD,CAFkB,CAGlB;AACA;AACA;AACA;;AACA,QAAMK,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc;AACf,GAHD;;AAIA,QAAMI,WAAW,GAAIF,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ;AACT,GAHD;;AAIA,QAAMO,UAAU,GAAIC,WAAD,IAAiB,CAErC,CAFC,CAfkB,CAkBlB;;;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,qBAEGC,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ,CAFH,eAGE;AACQ,YAAA,SAAS,EAAC,8DADlB;AAEQ,YAAA,IAAI,EAAC,QAFb;AAGQ,YAAA,OAAO,EAAET,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAUQ;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,sBAGCF,WAAW,CAACY,GAAZ,CAAiBC,IAAD,IAAU;AACjC,kCAAO,QAAC,QAAD;AAAyB,gBAAA,IAAI,EAAEA,IAA/B;AAAqC,gBAAA,UAAU,EAAEP;AAAjD,iBAAeO,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFQ;AAHD;AAAA;AAAA;AAAA;AAAA,kBAVR,EAiBIN,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAjBJ,eAkBG;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBH,eAmBE;AACQ,YAAA,SAAS,EAAC,8DADlB;AAEQ,YAAA,IAAI,EAAC,QAFb;AAGQ,YAAA,OAAO,EAAEO,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF,eA0BQ;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,sBACCP,KAAK,CAACc,GAAN,CAAWC,IAAD,IAAU;AAC3B,kCAAO,QAAC,YAAD;AAA6B,gBAAA,IAAI,EAAEA;AAAnC,iBAAmBA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFQ;AADD;AAAA;AAAA;AAAA;AAAA,kBA1BR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0CD,CA7DD;;GAAMlB,K;;KAAAA,K;AA+DN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport noteContext from \"../Context/Crops/CropContext\";\n/* import Addnote from \"./AddCrops\"; */\nimport Noteitem from \"./CropDetails\";\nimport AfterBidCard from \"./AfterBidCard\";\n/* import { FDashboard } from \"./Dashboard/FDashboard\"; */\nconst Notes = () => {\n  const context = useContext(noteContext);\n  const {crops,getCrops,forbidcrops,getforbidCrops}=context;\n  // useEffect(() => {\n  //   getCrops();\n  //   //eslint-disable-next-line\n  // }, []);\n  const handleforbidClick = (e) => {\n    e.preventDefault();\n    getforbidCrops();\n  };\n  const handleClick = (e) => {\n    e.preventDefault();\n    getCrops();\n  };\n  const updateNote = (currentNote) => {\n   \n}\n  //const crop=crops[0];\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <h2 className=\"mb-5 text-white\">List of All Crops Available for bid</h2>\n          <div className=\"container row mx-2\">\n            {/* <h5>{crops.length === 0 && \"No Crop to Display\"}</h5> */}\n            {console.log(localStorage.getItem('role'))}\n            <button\n                    className=\"btn btn-lg btn-success btn-login fw-bold text-uppercase mb-5\"\n                    type=\"submit\"\n                    onClick={handleforbidClick}\n                  >\n                   Get list of your crops Available for bid\n                  </button>\n                  <div className=\"row\">\n\n                 \n                  {forbidcrops.map((crop) => {\n            return <Noteitem key={crop._id} crop={crop} updateNote={updateNote} />;\n          })}\n             </div>\n             {console.log(crops)}\n             <h2 className=\"mb-5 text-white\">List of bids for your Crops </h2>\n            <button\n                    className=\"btn btn-lg btn-success btn-login fw-bold text-uppercase mb-5\"\n                    type=\"submit\"\n                    onClick={handleClick}\n                  >\n                    Get details of current bid for your crop\n                  </button>\n                  <div className=\"row\">\n                  {crops.map((crop) => {\n            return <AfterBidCard key={crop._id} crop={crop} />;\n          })}\n                   </div>\n          </div>\n         \n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}